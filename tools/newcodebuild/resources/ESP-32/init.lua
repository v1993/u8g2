local controllers = require 'resources/Common/controllers'
local interfaces = require 'resources/ESP-32/interfaces'
local u8x8  = require 'resources/CXX/U8x8lib'
local u8g2  = require 'resources/CXX/U8g2lib'

local function write_U8x8lib_hpp(u8x8obj)
	local str = file_read('resources/CXX/U8x8lib.template.hpp')
	local U8x8lib_hpp = assert(io.open(file_tmpname 'ESP-32_U8x8lib.hpp', 'w'))
	str = str:gsub('U8G2_CODEBUILD_DISCAIMER', [[
Please keep in mind that this file is auto-generated by codebuild.
  Edit `tools/codebuild/resources/CXX/U8x8lib.template.hpp` if you want to contribute changes.]])
	:gsub('// U8G2_CODEBUILD_INCLUDES', file_read('resources/ESP-32/u8x8includes.h'))
	:gsub('// U8G2_CODEBUILD_OPTIONS', '// Options can be tweakid via ESP-IDF configurator')
	:gsub('// U8G2_CODEBUILD_U8X8_CLASS', 'class U8X8')
	:gsub('// U8G2_CODEBUILD_USER_PTR', '		// user_ptr is used internally by driver and should not be modified')
	:gsub('// U8G2_CODEBUILD_U8X8_PRINT', file_read('resources/ESP-32/u8x8print.h'))
	:gsub('// U8G2_CODEBUILD_U8X8LOG_CLASS', 'class U8X8LOG')
	:gsub('// U8G2_CODEBUILD_U8X8LOG_PRINT', file_read('resources/ESP-32/u8x8logprint.h'))
	:gsub('// U8G2_CODEBUILD_CXX_CONSTRUCTORS', u8x8obj:getDecls())

	U8x8lib_hpp:write(str)
	U8x8lib_hpp:close()
end

local function write_U8g2lib_hpp(u8g2obj)
	local str = file_read('resources/CXX/U8g2lib.template.hpp')
	local U8g2lib_hpp = assert(io.open(file_tmpname 'ESP-32_U8g2lib.hpp', 'w'))
	str = str:gsub('U8G2_CODEBUILD_DISCAIMER', [[
Please keep in mind that this file is auto-generated by codebuild.
  Edit `tools/codebuild/resources/CXX/U8g2lib.template.hpp` if you want to contribute changes.]])
	:gsub('// U8G2_CODEBUILD_INCLUDES', file_read('resources/ESP-32/u8g2includes.h'))
	:gsub('// U8G2_CODEBUILD_U8G2_CLASS', 'class U8G2')
	:gsub('// U8G2_CODEBUILD_USER_PTR', '		// user_ptr is used internally by driver and should not be modified')
	:gsub('// U8G2_CODEBUILD_U8G2_PRINT', file_read('resources/ESP-32/u8g2print.h'))
	:gsub('// U8G2_CODEBUILD_U8G2LOG_CLASS', 'class U8G2LOG')
	:gsub('// U8G2_CODEBUILD_U8G2LOG_PRINT', file_read('resources/ESP-32/u8g2logprint.h'))
	:gsub('// U8G2_CODEBUILD_CXX_CONSTRUCTORS', u8g2obj:getDecls())

	U8g2lib_hpp:write(str)
	U8g2lib_hpp:close()
end

local function build()
	local u8x8obj = u8x8.new()
	local u8g2obj = u8g2.new()
	for k,v in ipairs(controllers) do
		u8x8obj:add(v, interfaces)
		u8g2obj:add(v, interfaces)
	end
	write_U8x8lib_hpp(u8x8obj)
	write_U8g2lib_hpp(u8g2obj)
end

local function install()
	file_copy(file_tmpname 'ESP-32_U8x8lib.hpp', '../../sys/esp-idf/U8x8lib.hpp')
	file_copy(file_tmpname 'ESP-32_U8g2lib.hpp', '../../sys/esp-idf/U8g2lib.hpp')
end

local function clean()
	file_tmpclean 'ESP-32_U8x8lib.hpp'
	file_tmpclean 'ESP-32_U8g2lib.hpp'
end

return { build = build; install = install; clean = clean; }

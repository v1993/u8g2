local controllers = require 'resources/Common/controllers'
local interfaces = require 'resources/Arduino/interfaces'
local u8x8  = require 'resources/CXX/U8x8lib'
local u8g2  = require 'resources/CXX/U8g2lib'

local function write_U8g2lib_h(u8g2obj)
	local str = file_read('resources/CXX/U8g2lib.template.hpp')
	local U8g2lib_h = assert(io.open(file_tmpname 'Arduino_U8g2lib.h', 'w'))
	str = str:gsub('U8G2_CODEBUILD_DISCAIMER', [[
Please keep in mind that this file is auto-generated by codebuild.
  Edit `tools/codebuild/resources/CXX/U8g2lib.template.hpp` if you want to contribute changes.]])
	:gsub('// U8G2_CODEBUILD_INCLUDES', file_read('resources/Arduino/includes.h'))
	:gsub('// U8G2_CODEBUILD_U8G2_CLASS', 'class U8G2: public Print')
	:gsub('// U8G2_CODEBUILD_USER_PTR', file_read('resources/Arduino/userptr.h'))
	:gsub('// U8G2_CODEBUILD_U8G2_PRINT', file_read('resources/Arduino/u8g2print.h'))
	:gsub('// U8G2_CODEBUILD_U8G2LOG_CLASS', 'class U8G2LOG: public Print')
	:gsub('// U8G2_CODEBUILD_U8G2LOG_PRINT', file_read('resources/Arduino/u8g2logprint.h'))
	:gsub('// U8G2_CODEBUILD_CXX_CONSTRUCTORS', u8g2obj:getDecls())

	U8g2lib_h:write(str)
	U8g2lib_h:close()
end

local u8x8obj = u8x8.new()
local u8g2obj = u8g2.new()

local function build()
	for k,v in ipairs(controllers) do
		u8x8obj:add(v, interfaces)
		u8g2obj:add(v, interfaces)
	end
	-- TODO: write_U8x8lib_h
	write_U8g2lib_h(u8g2obj)
end

local function csrc_install(fname)
	file_copy(file_tmpname(fname), '../../csrc/'..fname)
end

local function install()
	-- TODO: Add install
end

return { build = build; install = install; }
